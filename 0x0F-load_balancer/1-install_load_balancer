#!/usr/bin/env bash
#Installs and configures HAproxy in a load balancer server

sudo apt-get update

sudo apt-get install -y haproxy

sudo mv /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.bak

HOSTNAME=$(hostname)

sudo touch /etc/haproxy/haproxy.cfg

sudo bash -c "cat << EOF > /etc/haproxy/haproxy.cfg
frontend www
    bind *:80
    mode http
    default_backend webservers

backend webservers
    mode http
    balance roundrobin
    server web-01 ${HOSTNAME}-web-01:80 check
    server web-02 ${HOSTNAME}-web-02:80 check
EOF"

sudo touch /etc/init.d/haproxy

sudo bash -c "cat << EOF > /etc/init.d/haproxy
#!/bin/sh
### BEGIN INIT INFO
# Provides:          haproxy
# Required-Start:    \$local_fs \$remote_fs \$network \$syslog
# Required-Stop:     \$local_fs \$remote_fs \$network \$syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: HAProxy Load Balancer
# Description:       HAProxy is a TCP/HTTP reverse proxy which is particularly suited for high availability environments.
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/haproxy
CONFIG=/etc/haproxy/haproxy.cfg
PIDFILE=/var/run/haproxy.pid

# Exit if the package is not installed
[ -x \$DAEMON ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/haproxy ] && . /etc/default/haproxy

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

VERBOSE=yes

# Start HAProxy
haproxy_start() {
    /usr/sbin/haproxy -D -f \$CONFIG -p \$PIDFILE
}

# Stop HAProxy
haproxy_stop() {
    /usr/sbin/haproxy -D -f \$CONFIG -p \$PIDFILE -sf \$(cat \$PIDFILE) && rm -f \$PIDFILE
}

# Reload HAProxy
haproxy_reload() {
    /usr/sbin/haproxy -D -f \$CONFIG -p \$PIDFILE -sf \$(cat \$PIDFILE)
}

case \$1 in
    start)
        log_daemon_msg "Starting HAProxy" "haproxy"
        haproxy_start
        log_end_msg \$?
        ;;
    stop)
        log_daemon_msg "Stopping HAProxy" "haproxy"
        haproxy_stop
        log_end_msg \$?
        ;;
    reload)
        log_daemon_msg "Reloading HAProxy" "haproxy"
        haproxy_reload
        log_end_msg \$?
        ;;
